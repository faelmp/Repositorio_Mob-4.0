#include <SD.h>
#include <SPI.h>

#define TRIG_PIN 9 // Pino TRIG do sensor HC-SR04
#define ECHO_PIN 10 // Pino ECHO do sensor HC-SR04
#define CHIP_SELECT 4 // Pino CS do módulo microSD

long duration;
int distance;
int peopleCount = 0;
bool objectDetected = false;
unsigned long lastDetectionTime = 0;
const int detectionThreshold = 50; // Distância (em cm) para detectar presença
const int debounceDelay = 1000;   // Intervalo (em ms) entre contagens

File dataFile;

void setup() {
  // Configura os pinos
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);

  // Inicializa o monitor serial
  Serial.begin(9600);

  // Inicializa o cartão microSD
  if (!SD.begin(CHIP_SELECT)) {
    Serial.println("Erro ao inicializar o cartão microSD!");
    while (1); // Para o programa se o cartão não inicializar
  }
  Serial.println("Cartão microSD inicializado com sucesso!");

  // Abre (ou cria) o arquivo para escrita
  dataFile = SD.open("contagem.txt", FILE_WRITE);
  if (dataFile) {
    dataFile.println("Inicio da contagem:");
    dataFile.close();
  } else {
    Serial.println("Erro ao abrir o arquivo!");
  }
}

void loop() {
  // Envia um pulso para o sensor
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  // Calcula o tempo do retorno do pulso
  duration = pulseIn(ECHO_PIN, HIGH);

  // Converte o tempo para distância (em cm)
  distance = duration * 0.034 / 2;

  // Verifica se há um objeto dentro da distância definida
  if (distance > 0 && distance < detectionThreshold) {
    if (!objectDetected && millis() - lastDetectionTime > debounceDelay) {
      objectDetected = true;
      peopleCount++;
      lastDetectionTime = millis();
      
      // Exibe e salva a contagem
      Serial.print("Quantidade de pessoas: ");
      Serial.println(peopleCount);

      dataFile = SD.open("contagem.txt", FILE_WRITE);
      if (dataFile) {
        dataFile.print("Pessoas detectadas: ");
        dataFile.println(peopleCount);
        dataFile.close();
      } else {
        Serial.println("Erro ao abrir o arquivo para salvar!");
      }
    }
  } else {
    objectDetected = false;
  }

  delay(100); // Atraso para reduzir leituras redundantes
}
